test
str(test)
table(test$flagObservationStatus)
table(test$Version)
test
test[3:4, ]
test[flagObservationStatus == "T", ]
str(test)
table(test$flagObservationStatus)
test[flagObservationStatus == "", ]
test[, unique(flagObservationStatus), by = c("geographicAreaM49", "measuredElement", "measuredItemCPC", "timePointYears")]
test[, length(unique(flagObservationStatus)), by = c("geographicAreaM49", "measuredElement", "measuredItemCPC", "timePointYears")]
str(test)
test[flagObservationStatus == "", ]
table(test$Version)
table(test$Version)[7:9, ]
test[flagObservationStatus == "", ][7:9, ]
str(newKey)
str(test)
str(newKey)
str(newKey)
dim(test)
str(test)
check[V1 != 1,]
unique(check$geographicAreaM49)
FAOcountryProfile[FAOcountryProfile %in% unique(check$geographicAreaM49), "FAO_TABLE_NAME"]
FAOcountryProfile[FAOcountryProfile_UN_CODE %in% unique(check$geographicAreaM49), "FAO_TABLE_NAME"]
FAOcountryProfile[FAOcountryProfile$UN_CODE %in% unique(check$geographicAreaM49), "FAO_TABLE_NAME"]
str(test)
library(lattice)
str(test2)
check[V1 != 1, ]
table(check$V1)
str(tes2)
str(tets2)
str(test2)
library(reshape2)
169 + 19 + 59
str(test)
str(test)
str(okraHistory)
str(okraHistory)
str(okraHistory)
okraHistory[numberOfHistory > 1, ]
okraHistory[numberOfHistory > 1, ][1, ]
okraHistory[numberOfHistory > 1, ][1:2, ]
okraHistory[numberOfHistory > 1, ][1:3, ]
str(okraFinalHistory.dt)
str(okraFinalHistory.dt)
unique(okraFinalHistory.dt$flagObervationStatus)
unique(okraFinalHistory.dt$flagObservationStatus)
strokraCasted.dt)
str(okraCasted.dt)
str(okraCasted.dt)
colnames(okraCasted.dt)
okraCasted.dt[which(Symb_E > 1), ]
okraCasted.dt[which(Symb_E > 1), ]
str(okraCasted.dt)
okraCasted.dt
okraCasted.dt[Symb_ - Symb_E > 1e6,]
okraCasted.dt[(Symb_ - Symb_E)/Symb_ > -20,]
?is.finite
entropy
apropos(entropy)
apropos("entropy")
help("entropy")
library(entropy)
library(help = entropy)
entropy
?entropy
table(okraCasted.dt)
str(okraCasted.dt)
vignette("methodology")
dim(okraCasted.dt)
150 * 200
150 * 200 * 1.3
2*(0.5 * log(0.5))
2*(0.5 * log(0.5, 2))
2*(-0.5 * log(0.5, 2))
2*(-0.5 * log(0, 2))
3*(-1/3 * log(1/3, 2))
3*(-1/3 * log(1/3, 3))
3*(-1/3 * log(1/3))
?entropy
entropy.empirical
?entropy.empirical
     KL.empirical(y1, y2, unit=c("log", "log2", "log10"))
KL.empirical
KL.empirical(okraCasted[, Symb_], okraCasted[, Symb_E]
)
KL.empirical(okraCasted.dt[, Symb_], okraCasted.dt[, Symb_E])
str(tmp)
dim(tmp)
dim(tmp2)
sum(okraCasted.dt[, Symb_E == 0], na.rm = TRUE)
okraCasted.dt[, Symb_E == 0]
sum(okraCasted.dt[, Symb_T == 0], na.rm = TRUE)
sum(okraCasted.dt[, Symb_ == 0], na.rm = TRUE)
str(okraCasted.dt)
library(help = entropy)
ks.test
with(okraCasted.dt,
     {
         ks.test(Symb_, Symb_E)})
log(2, 10)
dbenford(2)
dbenford(1)
)
length(firstDigitDensity$breaks)
c(319, 184, 112,  81,  77,  66,  59,  68,  44)/sum(c(319, 184, 112,  81,  77,  66,  59,  68,  44))
)
?table
dim(check)
check
ll()
str(okraCasted.dt)
okraCasted.dt[Symb_ >= 6e07, ]
str(
okraHistory[geographicAreaM49 == "356" &
              measuredElement == 5510, ]
)
library(ggplot2)
okraCasted.dt[Symb_ >= 6e07, ]
57000000
61739752
str(okraCasted.dt)
apropos("imputation" <- )
apropos("imputation")
apropos
?apropos
find("imputation")
help("imputation")
library(norm)
install.packages9"norm")
install.packages("norm")
library(Amelia)
str(okraCasted.dt)
str(testimpute)
testimpute$imputation$imp1[any(is.na(Symb_), ]
testimpute$imputation$imp1[is.na(Symb_), ]
testimpute$imputation$imp1[is.na(Symb_E), ]
testimpute$imputation$imp1[is.na(Symb_T), ]
check[geographicAreaM49 == "356", ]
summary(check)
?amelia
dmvnorm
library(mvnorm)
library(mvtnorm)
dmvnorm
?dmvnorm
library(help = mvtnorm)
str(testimpute)
?xyplot
str(check)
str(test)
str(test)
test
similarity
length(weights)
centroid
similarity
str(check)
tmp
colMeans(weights)
mean(weights)
colMean(weights)
colmanes
colmeans
colMeans
colMeans(tmp)
tmp[1, ]
finalWeights
finalWeights
faoswsFlagTable
head(tmp)
str(tmp)
dim(commodityCasted.dt[, (Symb_ - Symb_E)/Symb_])
length(commodityCasted.dt[, (Symb_ - Symb_E)/Symb_])
length(commodityCasted.dt[, (Symb_ - Symb_T)/Symb_])
hist(commodityCasted.dt[, (Symb_ - Symb_T)/Symb_ * 100], breaks = 1000)
commodityNoMiss.dt[(Symb_ - Symb_T)/Symb_ * 100 > 700, ]
commodityNoMiss.dt[(Symb_ - Symb_T)/Symb_ * 100 < -700, ]
commodityCasted.dt[geographicAreaM49 == 784 & measuredElement == 5312, ]
(600 + 550)/2
str(commodityHistory)
test = computeFlagWeight(tmp)
test = computeFlagWeight(tmp)
test = computeFlagWeight(tmp)
str(test)
sapply(testimpute$imputation, Fun = function(x) computeCentroidWeights(data.matrix(x)))
sapply(testimpute$imputation, FUN = function(x) computeCentroidWeights(data.matrix(x)))
sapply(testimpute$imputation, FUN = function(x) computeCentroidWeights(data.matrix(x[, list(Symb_, Symb_E, Symb_T]))))
sapply(testimpute$imputation, FUN = function(x) computeCentroidWeights(data.matrix(x[, list(Symb_, Symb_E, Symb_T)])))
rowMeans(sapply(testimpute$imputation, FUN = function(x) computeCentroidWeights(data.matrix(x[, list(Symb_, Symb_E, Symb_T)]))))
test = computeFlagWeight(tmp)
computeFlagWeight
test = computeFlagWeight(tmp)
str(testimpute$imputation)
test = computeFlagWeight(tmp)
test = computeFlagWeight(tmp)
test
faoswsFlagTable
str(faoswsFlagTable)
sort(test)
names(sort(test))
gsub("Symb_", "", names(sort(test)))
testTable = computeFlagWeight(tmp)
testTable = computeFlagWeight(tmp)
gsub("Symb_", "", names(sort(test)))
data.frame(gsub("Symb_", "", names(sort(test))), 1:3)
data.frame(gsub("Symb_", "", names(sort(test))), 1:3)
testTable = computeFlagWeight(tmp)
testTable = computeFlagWeight(tmp)
testTable = computeFlagWeight(tmp)
testTable = computeFlagWeight(tmp)
testTable = computeFlagWeight(tmp)
testTable
test
sort(test)
data.frame(sort(test))
as.data.frame(test)
?sort
?data.frame
testTable = computeFlagWeight(tmp)
testTable
testTable = computeFlagWeight(tmp)
testTable
testTable
  flagObservationStatus flagObservationWeights
1                     T              0.3806925
2                                    0.3538997
3                     E              0.2654078
4                     M              0.0000000
str(tmp)
str(tmp)
str(check)
str(check)
str(tmp)
str(check)
rm(check)
str(check)
str(tmp)
unique(tmp$measuredItemCPC)
testTable = computeFlagWeight(tmp)
paste0("!is.na(", c("Symb_", "Symb_E"), ")")
paste0("!is.na(", c("Symb_", "Symb_E"), ")", collapse = " & ")
symbNames = c("Symb_", "Symb_E")
condition
check
str(check)
args(amelia)
?amelia
?amelia
str(check)
dim(tmp)
str(tmp)
test
faoswsFlagTable
newKey
(testTable = computeFlagWeight(testHistory, method = "entropy"))
1/1.1
1/1.2
(testTable = computeFlagWeight(testHistory, method = "entropy"))
1/(1 + 0.06)
1/(1 + 0.145)
str(commodityNoMiss.dt)
sweep
?sweep
?sweep
A
commodityNoMiss.dt[1:5, Symb_]
test
sort(test)
str(commodityNoMiss.dt)
traceback()
detach("package:faoswsFlag", unload = TRUE)
detach("package:faoswsProductionImputation", unload = TRUE)
detach("package:faoswsFlag", unload = TRUE)
library(faoswsFlag)
computeFlagWeights
computeFlagWeight
computeEntropyWeight
computeEntropyWeights
obsTable
str(history)
str(history)
traceback()
computeEntropyWeights
computeEntropyWeights
KL.plugin
KL.empirical
KL.plugin
freqs.empirical
hist(rnorm(100), plot= FALSE)
?KL.empirical
KL.empirical
0/10
KL.plugin
hist
?hist
str(history)
nclass.Sturges
nclass.scott
nclass.FD
1:10%/%3
1:10%%3
1:10%%2
1:10%%3 == 1
log(3000)
log(1000)
log(100)
log(10)
GetHistory
newKey[[1]]
GetCodeTree
test = GetCodeTree("agriculture", "agriculture", "measuredItemCPC")
str(test)
test$parent
getAllItemCode()
getAllItemCode()
getAllItemCode()
dim(history)
str(history)
history[flagObservationStatus == "I", ]
log(685)
685/log(685)
685/round(log(685))
dim(history2)
intersect
union
3780/3
str(history)
GetMapping
GetMapping.processResult
str(newKey)
GetMapping(newKey)
MappingTableKey()
GetHistory()
str(newKey[[1]])
GetData(newKey[[1]])
str(newKey[[1]])
GetData(swsContext.datasets[[1]])
k
